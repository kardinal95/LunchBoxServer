openapi: "3.0.0"
info:
  description: This is the swagger file that goes with our server code
  version: "1.0.0"
  title: Swagger REST Article
servers:
  - url: /api
    description: api path
paths:
  /auth/login:
    post:
      summary: "Authorize"
      description: "Returns jwt token for user with provided login and password"
      operationId: "py.core.authentication.authorize"
      tags:
        - "auth"
      requestBody:
        description: "Login details"
        content:
          application/json:
            schema:
              type: object
              required:
                - login
                - password
              properties:
                login:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: JWT token
          content:
            'text/plain':
              schema:
                type: string
        400:
          description: "Incorrect login information"
  /auth/validate:
    get:
      summary: "Information on token validity"
      operationId: "py.core.authentication.validate"
      tags:
        - "auth"
      security:
        - jwt: []
      responses:
        200:
          description: Success on getting info
  /users/password/change:
    post:
      summary: "Change current user password"
      operationId: "py.core.user_management.change_password"
      tags:
        - "users"
      security:
        - jwt: []
      requestBody:
        description: "New password"
        content:
          application/json:
            schema:
              type: object
              required:
                - password
              properties:
                password:
                  type: string
      responses:
        200:
          description: Success on changing password
  /users/add:
    post:
      summary: "Add new user"
      operationId: "py.core.user_management.add_user"
      tags:
        - "users"
      security:
        - jwt: []
      requestBody:
        description: "New user details"
        content:
          application/json:
            schema:
              type: object
              required:
                - login
                - password
              properties:
                name:
                  type: string
                login:
                  type: string
                phone:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: Success on changing password
  /products:
    get:
      summary: Получить список всех продуктов
      operationId: py.core.products.get_products
      tags:
        - products
      security:
        - jwt: []
      parameters:
        - $ref: '#/components/parameters/locked'
        - $ref: '#/components/parameters/archived'
      responses:
        200:
          description: Успех
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
        401:
          description: Пользователь не авторизован
        403:
          description: Недопустимая операция для текущего пользователя
  /products/{id}:
    get:
      summary: Получить продукт с указанным id
      operationId: py.core.products.get_product_with_id
      tags:
        - products
      security:
        - jwt: []
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        200:
          description: Успех
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        404:
          description: Продукт с указанным id не найден
        401:
          description: Пользователь не авторизован
        403:
          description: Недопустимая операция для текущего пользователя
  /products/{id}/edit:
    post:
      summary: Изменить продукт с указанным id
      operationId: py.core.products.edit_product_with_id
      tags:
        - products
      security:
        - jwt: []
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        description: Обновленные данные продукта
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductEdit'
      responses:
        200:
          description: Успех
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        404:
          description: Продукт с указанным id не найден
        401:
          description: Пользователь не авторизован
        403:
          description: Недопустимая операция для текущего пользователя
  /products/{id}/remove:
    post:
      summary: Удалить продукт с указанным id
      operationId: py.core.products.remove_product_with_id
      tags:
        - products
      security:
        - jwt: []
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        200:
          description: Успех
        404:
          description: Продукт с указанным id не найден
        401:
          description: Пользователь не авторизован
        403:
          description: Недопустимая операция для текущего пользователя
  /products/{id}/archive:
    post:
      summary: Архивировать продукт с указанным id
      operationId: py.core.products.archive_product_with_id
      tags:
        - products
      security:
        - jwt: []
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        200:
          description: Успех
        404:
          description: Продукт с указанным id не найден
        401:
          description: Пользователь не авторизован
        403:
          description: Недопустимая операция для текущего пользователя
  /products/{id}/lock:
    post:
      summary: Заблокировать продукт с указанным id
      operationId: py.core.products.lock_product_with_id
      tags:
        - products
      security:
        - jwt: []
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        200:
          description: Успех
        404:
          description: Продукт с указанным id не найден
        401:
          description: Пользователь не авторизован
        403:
          description: Недопустимая операция для текущего пользователя
  /products/add:
    post:
      summary: Добавить новый продукт
      operationId: py.core.products.add_product
      tags:
        - products
      security:
        - jwt: []
      requestBody:
        description: Данные нового продукта
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductEdit"
      responses:
        200:
          description: Успех
        401:
          description: Пользователь не авторизован
        403:
          description: Недопустимая операция для текущего пользователя
  /products/batch/add:
    post:
      summary: Добавить несколько новых продуктов
      operationId: py.core.products.batch_add_products
      tags:
        - products
      security:
        - jwt: []
      requestBody:
        description: Данные новых продуктов
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/ProductEditWithId"
      responses:
        200:
          description: Успех
        401:
          description: Пользователь не авторизован
        403:
          description: Недопустимая операция для текущего пользователя
  /products/batch/edit:
    post:
      summary: Изменить данные нескольких продуктов
      operationId: py.core.products.batch_edit_products
      tags:
        - products
      security:
        - jwt: []
      requestBody:
        description: Обновленные данные
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/ProductEditWithId"
      responses:
        200:
          description: Успех
        401:
          description: Пользователь не авторизован
        403:
          description: Недопустимая операция для текущего пользователя
  /products/batch/remove:
    post:
      summary: Удалить несколько продуктов
      description: Для несуществующих ID операция в любом случае будет выполнена успешно
      operationId: py.core.products.batch_remove_products
      tags:
        - products
      security:
        - jwt: []
      requestBody:
        description: Список идентификаторов для удаления
        content:
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int32
      responses:
        200:
          description: Успех
        401:
          description: Пользователь не авторизован
        403:
          description: Недопустимая операция для текущего пользователя
  /lunchboxes:
    get:
      summary: Список всех ланчбоксов
      operationId: py.core.lunchboxes.get_lunchboxes
      tags:
        - lunchboxes
      responses:
        200:
          description: Успех
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Lunchbox"
  /lunchboxes/{id}:
    get:
      summary: Получить ланчбокс с указанным id
      operationId: py.core.lunchboxes.get_lunchbox_with_id
      tags:
        - lunchboxes
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        200:
          description: Успех
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Lunchbox"
        404:
          description: Ланчбокс с указанным id не найден
  /lunchboxes/{id}/full:
    get:
      summary: Получить ланчбокс (полные данные) с указанным id
      operationId: py.core.lunchboxes.get_lunchbox_full_with_id
      tags:
        - lunchboxes
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        200:
          description: Успех
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LunchboxFull"
        404:
          description: Ланчбокс с указанным id не найден
  /lunchboxes/{id}/products:
    get:
      summary: Получить продукты из ланчбокса с указанным id
      operationId: py.core.lunchboxes.get_lunchbox_products_with_id
      tags:
        - lunchboxes
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        200:
          description: Успех
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
        404:
          description: Ланчбокс с указанным id не найден
  /lunchboxes/{id}/edit:
    post:
      summary: Изменить ланчбокс с указанным id
      operationId: py.core.lunchboxes.edit_lunchbox_with_id
      tags:
        - lunchboxes
      security:
        - jwt: []
      parameters:
        - $ref: "#/components/parameters/id"
      requestBody:
        description: Обновленные данные ланчбокса
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LunchboxNoId'
      responses:
        200:
          description: Успех
        404:
          description: Ланчбокс с указанным id не найден
  /lunchboxes/{id}/remove:
    post:
      summary: Удалить ланчбокс с указанным id
      operationId: py.core.lunchboxes.remove_lunchbox_with_id
      tags:
        - lunchboxes
      security:
        - jwt: []
      parameters:
        - $ref: "#/components/parameters/id"
      responses:
        200:
          description: Успех
        404:
          description: Ланчбокс с указанным id не найден
  /lunchboxes/add:
    post:
      summary: Добавить новый ланчбокс
      operationId: py.core.lunchboxes.add_lunchbox
      tags:
        - lunchboxes
      security:
        - jwt: []
      requestBody:
        description: Данные ланчбокса
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LunchboxNoId'
      responses:
        200:
          description: Успех
components:
  schemas:
    Product:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          pattern: ".{6,}"
        description:
          type: string
        locked:
          type: boolean
        archived:
          type: boolean
    ProductEdit:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          pattern: ".{6,}"
        description:
          type: string
    ProductEditWithId:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          pattern: ".{6,}"
        description:
          type: string
    LunchboxFull:
      type: object
      required:
        - id
        - name
        - price
        - products
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          pattern: ".{6,}"
        price:
          type: integer
          minimum: 1
          format: int32
        products:
          type: array
          minItems: 1
          items:
            $ref: "#/components/schemas/Product"
    Lunchbox:
      type: object
      required:
        - id
        - name
        - price
        - products
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          pattern: ".{6,}"
        price:
          type: integer
          minimum: 1
          format: int32
        products:
          type: array
          minItems: 1
          items:
            type: integer
            format: int32
    LunchboxNoId:
      type: object
      required:
        - name
        - price
        - products
      properties:
        name:
          type: string
          pattern: ".{6,}"
        price:
          type: integer
          minimum: 1
          format: int32
        products:
          type: array
          minItems: 1
          items:
            type: integer
            format: int32
  parameters:
    id:
      name: id
      in: path
      description: Уникальный id цели
      required: true
      schema:
        type: integer
        format: int32
    locked:
      name: locked
      in: query
      description: Флаг подгрузки заблокированных для изменения данных
      required: false
      schema:
        type: boolean
        default: true
    archived:
      name: archived
      in: query
      description: Флаг подгрузки архивированных данных
      required: false
      schema:
        type: boolean
        default: true
  securitySchemes:
    jwt:
      type: http
      scheme: bearer
      bearerFormat: JWT
      x-bearerInfoFunc: py.core.authentication.decode_token